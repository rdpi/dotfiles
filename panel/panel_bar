#! /bin/sh
#
# bar input parser for bspwm  Wednesday, 01 October 2014 14:56 IST

#screen_width=$(sres -W)

NORMIFS=$IFS
FIELDIFS=':'

source $(dirname $0)/panel_config

FONT1="-*-profont-medium-*-*--12-*-*-*-*-*-*-1"
FONT2="-misc-stlarch-medium-r-normal--10-100-75-75-c-80-iso10646-1"

# Fetch the Colors
BG=$(cat $HOME/.colors/skyline | grep -i background | tail -c 8)
TEXTCOLOR=$(cat $HOME/.colors/skyline | grep -i foreground | tail -c 8)


BLACK=$(cat $HOME/.colors/skyline | grep -i color8 | tail -c 8)
RED=$(cat $HOME/.colors/skyline | grep -i color9 | tail -c 8)
GREEN=$(cat $HOME/.colors/skyline | grep -i color10 | tail -c 8)
YELLOW=$(cat $HOME/.colors/skyline | grep -i color11 | tail -c 8)
BLUE=$(cat $HOME/.colors/skyline | grep -i color12 | tail -c 8)
MAGENTA=$(cat $HOME/.colors/skyline | grep -i color13 | tail -c 8)
CYAN=$(cat $HOME/.colors/skyline | grep -i color14 | tail -c 8)
WHITE=$(cat $HOME/.colors/skyline | grep -i color15 | tail -c 8)

while read -r line ; do
    case $line in
        S*)
            # conky
            sys_infos="${line#?}"
            ;;
        #A*)
            ## custom window title using xprop xwinfo
            #title="%{F$TITLE_FG B-}${PAD}$(xwinfo -c ${line#?} | sed 's@N/A@@')${PAD}%{F- B-}"
            #;;
        T*)
            # window title
            title=$(echo ${line#?} | sed 's^\(.\{40\}\).*^\1...^')
            title="%{F$TITLE_FG} ${title} ${LPAD} %{F-}"
            ;;
        W*)
            # bspwm internal state
            wm_infos=""
            IFS=$FIELDIFS
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                case $item in
                    [OoFfUu]*)
                        # desktops
                        name=${item#?}
                        case $item in
                            O*)
                                # focused occupied desktop
                                FG=$F_O_FG
                                #BG=$F_O_BG
                                ;;
                            F*)
                                # focused free desktop
                                FG=$F_F_FG
                                BG=$F_F_BG
                                ;;
                            U*)
                                # focused urgent desktop
                                FG=$F_U_FG
                                BG=$F_U_BG
                                ;;
                            o*)TEXTCOLOR
                                # occupied desktop
                                FG=$O_FG
                                BG=$O_BG
                                ;;
                            f*)
                                # free desktop
                                FG=$F_FG
                                BG=$F_BG
                                ;;
                            u*)
                                # urgent desktop
                                FG=$U_FG
                                BG=$U_BG
                                ;;
                        esac
                        wm_infos="${wm_infos}%{F$FG B$BG A:bspc desktop -f ${name}:}${PAD}${name}${PAD}%{A B- F-}"

                        mus() {
                            mus=$(mpc current)
                            if [[ $mus ]]; then
                                echo "%{B$BG}%{F$RED}  %{B-}%{F-}%{F$TEXTCOLOR} ${mus}"
                            else
                            echo
                            fi
                            return 
                        }
                        ;;
                    #L*)
                        ## layout
                        #layout=$(printf "[%s]" $( echo "${item#?}" | sed 's/^\(.\).*/\U\1/'))
                        #wm_infos="${wm_infos}%{F$BG B$LAYOUT_BG}%{F$LAYOUT_FG A:bspc desktop -l next:} $layout %{A F$LAYOUT_BG B-}"
                        #;;
                esac
                shift
            done
            IFS=$NORMIFS
            ;;
    esac

    function panel {

        updates() {
            update=$(checkupdates | wc -l)
            echo "%{B$BG}%{F$RED} %{B-}%{F-}%{F$TEXTCOLOR} ${update}"
        }

        mem() {
            mem=$(free -h | grep Mem: | awk '{print $3}')
            echo "%{B$BG}%{F$MAGENTA} %{B-}%{F-}%{F$TEXTCOLOR} ${mem}"
        }

        batt() {
        batt=$(acpi | cut -d ',' -f 2 | awk '{key=$0; getline; print key "" $0;}' | cut -d ' ' -f 2 | cut -d '%' -f 1)
            echo "%{B$BG}%{F$GREEN} %{B-}%{F-}%{F$TEXTCOLOR} ${batt}%"
        }

        clock() {
        clock=$(date "+%b %d %Y %I:%M")
            echo "%{B$BG}%{F$BLUE} %{B-}%{F-}%{F$TEXTCOLOR} ${clock}"
        }

        vol() {
        vol=$(amixer get Master | sed -nr '$ s:.*\[(.+%)].*:\1:p')
            echo "%{B$BG}%{F$YELLOW} %{B-}%{F-}%{F$TEXTCOLOR} ${vol}"
        }

        mus() {
        mus=$(mpc current)
        if [[ $mus ]]; then
            echo "%{B$BG}%{F$RED}  %{B-}%{F-}%{F$TEXTCOLOR} ${mus}"
        else
            echo
        fi
        return 
        }
        
        netstate() {
            test -n "`ip route`" && echo "Connected" || echo "Disconnected"
        }


        echo "%{l}$wm_infos %{}$(mus) %{r}$(updates) $(mem) $(batt) $(vol) $(clock) "
 
    }

    printf "%s\n" "%{l}$wm_infos $(mus) %{c}$title %{r}$sys_infos "
    #echo "$(panel)" 
done


